meta:
  host: Pd
  impurity: Rh
  prefix: ''
  description: PdRu solubility limit calculation with tetrahedron approximation
  structure: A1

experiment:
  temperature: [860.5, 856, 849, 840, 833, 825, 818]
  concentration: [0.12, 0.115, 0.11, 0.105, 0.1, 0.095, 0.09]

# series is a list contains sets of raw data and parameters for CVM calculations
series:
  # raw energies
  - energies: cluster.csv

    # The label of this sample. A label can be used to access series from the CVM instance.
    label: $T_\mathrm{FD}=800$K

    # Temperature steps follow the format [start, stop, # of steps].
    temperature: [400, 1000, 20]

    # The column name of host energies calculated from band calculation.
    host: Pd

    # The column name of impurity energies calculated from band calculation.
    impurity: Rh

    # optional, by default None. Alias of the `label` to give a human-friendly spelling.
    tag: 800k

    # optional, by default true. Set to true to execute an automatic conversion from Ry to eV.
    is_ry_unit: true

    # optional, by default false. Set to true to skip this series instance.
    skip: false

    # optional, by default x_1 = 0.001. The initialization concentration of impurity.
    x_1: 0.01

    # optional, by default condition = 1e-07. Convergence condition.
    condition: 1e-07

    # optional, by default lattice = 'lattice'. The column name of lattice parameters.
    lattice: lattice

    # optional, by default 'arithmetic'. Specific how to mix atom weights.
    # can be 'arithmetic', 'harmonic', and 'geometric'.
    mean: 'arithmetic'

    # optional., by default true. Specific whether or not to import the thermal vibration effect.
    vibration: true

    # set how to estimate r_0 from the given T and c.
    # if omit, r_0 will be calculated from each phase respectively.
    # if constant, will ignore T and c.
    # if dict, will do a parabolic curve fitting.
    r_0: { Rh4: 1.0, Pd1Rh3: 0.75, Pd2Rh2: 0.5, Pd3Rh1: 0.25, Pd4: 0.0 }

    normalizer:
      energies: normalizer.csv
      targets:
        Pd2Rh2:
          steps: [[1, 11, 2]]
          ratios: [
              12,
              6,
              24,
              12,
              24,
              8,
              48,
              6,
              12, # 9th-a
              24, # 9th-b
              24, # 10th -- 1
              24, # 11th
              24, # 12th
              48, # 13th-a
              24, # 13th-b
              48, # 14th
              12, # 15th
              24, # 16th-a
              24, # 16th-b
              24, # 17th-a
              6, # 17th-b
              48, # 18th-a
              24, # 18th-b
              24, # 19
              48, # 20th
            ]
      clusters: # set how to calculate interaction energy for each one
        - { 1_II: 1, 1_IH: -2, 1_HH: 1 }
        - { 2_II: 1, 2_IH: -2, 2_HH: 1 }
        - { 3_II: 1, 3_IH: -2, 3_HH: 1 }
        - { 4_II: 1, 4_IH: -2, 4_HH: 1 }
        - { 5_II: 1, 5_IH: -2, 5_HH: 1 }
        - { 6_II: 1, 6_IH: -2, 6_HH: 1 }
        - { 7_II: 1, 7_IH: -2, 7_HH: 1 }
        - { 8_II: 1, 8_IH: -2, 8_HH: 1 }
        - { 9_II: 1, 9_IH: -2, 9_HH: 1 }
        - { 10_II: 1, 10_IH: -2, 10_HH: 1 }
        - { 11_II: 1, 11_IH: -2, 11_HH: 1 }

    clusters: # Set how to calculate interaction energy.
      pair1: { Pd2Rh2_: 1, Pd3Rh1: -2, Pd4: 1 }
      pair2: { Pd4Rh2: 1, Pd5Rh1: -2, Pd6: 1 }
      triple: { Pd1Rh3: 1, Pd2Rh2: -3, Pd3Rh1: 3, Pd4: -1 }
      tetra: { Rh4: 1, Pd1Rh3: -4, Pd2Rh2: 6, Pd3Rh1: -4, Pd4: 1 }
